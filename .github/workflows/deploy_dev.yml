name: deploy_dev
on:
  push:
    branches:
      - develop
  workflow_dispatch: {}
jobs:
  Build-Synth:
    name: Synthesize
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container: null
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |-
          npm install -g aws-cdk
          pip install pipenv
          pipenv install
          pipenv run cdk synth
      - name: Upload cdk.out
        uses: actions/upload-artifact@v2.1.1
        with:
          name: cdk.out
          path: cdk.out
  Assets-DockerAsset1:
    name: Publish Assets Assets-DockerAsset1
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-DockerAsset1
        run: /bin/bash ./cdk.out/publish-Assets-DockerAsset1-step.sh
  Assets-DockerAsset2:
    name: Publish Assets Assets-DockerAsset2
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-DockerAsset2
        run: /bin/bash ./cdk.out/publish-Assets-DockerAsset2-step.sh
  Assets-DockerAsset3:
    name: Publish Assets Assets-DockerAsset3
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-DockerAsset3
        run: /bin/bash ./cdk.out/publish-Assets-DockerAsset3-step.sh
  Assets-DockerAsset4:
    name: Publish Assets Assets-DockerAsset4
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-DockerAsset4
        run: /bin/bash ./cdk.out/publish-Assets-DockerAsset4-step.sh
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset1-step.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-FileAsset2
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset2-step.sh
  Assets-FileAsset3:
    name: Publish Assets Assets-FileAsset3
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-FileAsset3
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset3-step.sh
  Assets-FileAsset4:
    name: Publish Assets Assets-FileAsset4
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-FileAsset4
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset4-step.sh
  Assets-FileAsset5:
    name: Publish Assets Assets-FileAsset5
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-FileAsset5
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset5-step.sh
  Assets-FileAsset6:
    name: Publish Assets Assets-FileAsset6
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-FileAsset6
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset6-step.sh
  Assets-FileAsset7:
    name: Publish Assets Assets-FileAsset7
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-FileAsset7
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset7-step.sh
  Assets-FileAsset8:
    name: Publish Assets Assets-FileAsset8
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-FileAsset8
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset8-step.sh
  Assets-FileAsset9:
    name: Publish Assets Assets-FileAsset9
    needs:
      - Build-Synth
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v2
        with:
          name: cdk.out
          path: cdk.out
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
      - id: Publish
        name: Publish Assets-FileAsset9
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset9-step.sh
  dev-us-east-2-SolutionEnvironment-BaseInfrastructureStack-Deploy:
    name: Deploy
      VideoManagementPipelineStackdevuseast2SolutionEnvironmentBaseInfrastructureStack2A9809BF
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Synth
      - Assets-FileAsset1
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
          role-to-assume: arn:aws:iam::747096213102:role/cdk-hnb659fds-deploy-role-747096213102-us-east-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: dev-us-east-2-SolutionEnvironment-BaseInfrastructureStack
          template: https://cdk-hnb659fds-assets-747096213102-us-east-2.s3.us-east-2.amazonaws.com/${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::747096213102:role/cdk-hnb659fds-cfn-exec-role-747096213102-us-east-2
  dev-us-east-2-SolutionEnvironment-VideoManagementStack-Deploy:
    name: Deploy
      VideoManagementPipelineStackdevuseast2SolutionEnvironmentVideoManagementStackCA797C6E
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Synth
      - Assets-FileAsset2
      - Assets-FileAsset3
      - Assets-FileAsset4
      - Assets-FileAsset5
      - Assets-FileAsset6
      - Assets-FileAsset7
      - Assets-DockerAsset1
      - Assets-DockerAsset2
      - dev-us-east-2-SolutionEnvironment-BaseInfrastructureStack-Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.undefined }}
          role-to-assume: arn:aws:iam::747096213102:role/cdk-hnb659fds-deploy-role-747096213102-us-east-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: dev-us-east-2-SolutionEnvironment-VideoManagementStack
          template: https://cdk-hnb659fds-assets-747096213102-us-east-2.s3.us-east-2.amazonaws.com/${{
            needs.Assets-FileAsset2.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::747096213102:role/cdk-hnb659fds-cfn-exec-role-747096213102-us-east-2
  # prod-us-east-2-SolutionEnvironment-BaseInfrastructureStack-Deploy:
  #   name: Deploy
  #     VideoManagementPipelineStackproduseast2SolutionEnvironmentBaseInfrastructureStack4FDAA482
  #   permissions:
  #     contents: read
  #     id-token: none
  #   needs:
  #     - Build-Synth
  #     - Assets-FileAsset8
  #     - dev-us-east-2-SolutionEnvironment-BaseInfrastructureStack-Deploy
  #     - dev-us-east-2-SolutionEnvironment-VideoManagementStack-Deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Authenticate Via GitHub Secrets
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-region: us-east-2
  #         role-duration-seconds: 1800
  #         role-skip-session-tagging: true
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-session-token: ${{ secrets.undefined }}
  #         role-to-assume: arn:aws:iam::308828263283:role/cdk-hnb659fds-deploy-role-308828263283-us-east-2
  #         role-external-id: Pipeline
  #     - id: Deploy
  #       uses: aws-actions/aws-cloudformation-github-deploy@v1
  #       with:
  #         name: prod-us-east-2-SolutionEnvironment-BaseInfrastructureStack
  #         template: https://cdk-hnb659fds-assets-308828263283-us-east-2.s3.us-east-2.amazonaws.com/${{
  #           needs.Assets-FileAsset8.outputs.asset-hash }}.json
  #         no-fail-on-empty-changeset: "1"
  #         role-arn: arn:aws:iam::308828263283:role/cdk-hnb659fds-cfn-exec-role-308828263283-us-east-2
  # prod-us-east-2-SolutionEnvironment-VideoManagementStack-Deploy:
  #   name: Deploy
  #     VideoManagementPipelineStackproduseast2SolutionEnvironmentVideoManagementStack1EE1039C
  #   permissions:
  #     contents: read
  #     id-token: none
  #   needs:
  #     - Build-Synth
  #     - Assets-FileAsset9
  #     - Assets-FileAsset3
  #     - Assets-FileAsset4
  #     - Assets-FileAsset5
  #     - Assets-FileAsset6
  #     - Assets-FileAsset7
  #     - Assets-DockerAsset3
  #     - Assets-DockerAsset4
  #     - prod-us-east-2-SolutionEnvironment-BaseInfrastructureStack-Deploy
  #     - dev-us-east-2-SolutionEnvironment-BaseInfrastructureStack-Deploy
  #     - dev-us-east-2-SolutionEnvironment-VideoManagementStack-Deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Authenticate Via GitHub Secrets
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-region: us-east-2
  #         role-duration-seconds: 1800
  #         role-skip-session-tagging: true
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-session-token: ${{ secrets.undefined }}
  #         role-to-assume: arn:aws:iam::308828263283:role/cdk-hnb659fds-deploy-role-308828263283-us-east-2
  #         role-external-id: Pipeline
  #     - id: Deploy
  #       uses: aws-actions/aws-cloudformation-github-deploy@v1
  #       with:
  #         name: prod-us-east-2-SolutionEnvironment-VideoManagementStack
  #         template: https://cdk-hnb659fds-assets-308828263283-us-east-2.s3.us-east-2.amazonaws.com/${{
  #           needs.Assets-FileAsset9.outputs.asset-hash }}.json
  #         no-fail-on-empty-changeset: "1"
  #         role-arn: arn:aws:iam::308828263283:role/cdk-hnb659fds-cfn-exec-role-308828263283-us-east-2
